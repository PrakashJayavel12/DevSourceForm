<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>